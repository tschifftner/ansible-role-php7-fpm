---
services: docker

env:
#  - distro: centos7
#  - distro: centos6
#  - distro: fedora27
#  - distro: ubuntu1604
#  - distro: ubuntu1404
#  - distro: ubuntu1204

  - distro: debian9
    playbook: php70.yml
    php_version: 7.0
  - distro: debian9
    playbook: php71.yml
    php_version: 7.1
  - distro: debian9
    playbook: php72.yml
    php_version: 7.2

  - distro: debian8
    playbook: php70.yml
    php_version: 7.0
  - distro: debian8
    playbook: php71.yml
    php_version: 7.1
  - distro: debian8
    playbook: php72.yml
    php_version: 7.2

  - distro: ubuntu1804
    playbook: php70.yml
    php_version: 7.0
  - distro: ubuntu1804
    playbook: php71.yml
    php_version: 7.1
  - distro: ubuntu1804
    playbook: php72.yml
    php_version: 7.2

script:
  # Configure test script so we can run extra tests after playbook is run.
  - export container_id=$(date +%s)
  - export cleanup=false

  # Download test shim.
  - wget -O ${PWD}/tests/test.sh https://gist.githubusercontent.com/geerlingguy/73ef1e5ee45d8694570f334be385e181/raw/
  - chmod +x ${PWD}/tests/test.sh

  # Run tests.
  - ${PWD}/tests/test.sh

  # Ensure PHP is installed and at the right version.
  - 'docker exec --tty ${container_id} env TERM=xterm which php'
  - 'docker exec --tty ${container_id} env TERM=xterm test -x /usr/bin/php'

  - 'docker exec --tty ${container_id} env TERM=xterm php --version'
  - 'docker exec --tty ${container_id} env TERM=xterm /usr/bin/php --version | grep -qF "PHP ${php_version}"'

  # Check if socket exists
  - 'docker exec --tty ${container_id} env TERM=xterm test -e /run/travis.socket'

  # Check if OpCache is installed
  - docker exec --tty ${container_id} env TERM=xterm php -v | grep 'ionCube'

  # Check if ioncube is installed
  - docker exec --tty ${container_id} env TERM=xterm php -v | grep 'OPcache'

  # Ensure PHP configurations have taken effect.
  - docker exec --tty ${container_id} env TERM=xterm php -i | grep 'memory_limit.*192'

  # Check the status of PHP-FPM.
  - docker exec --tty ${container_id} env TERM=xterm systemctl --no-pager status php${php_version}-fpm
  - docker exec --tty ${container_id} env TERM=xterm systemctl --no-pager status php${php_version}-fpm | grep 'fpm.service; enabled'

  # Check php extensions
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'apcu'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'bcmath'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'calendar'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'ctype'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'curl'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'dom'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'exif'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'fileinfo'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'ftp'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'gd'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'gettext'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'hash'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'iconv'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'igbinary'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'imagick'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'intl'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'json'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'libxml'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'mbstring'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'mcrypt'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'memcached'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'mysqli'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'mysqlnd'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'openssl'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'PDO'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'pdo_mysql'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'pdo_sqlite'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'Phar'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'redis'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'Reflection'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'session'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'SimpleXML'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'soap'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'sockets'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'SPL'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'sqlite3'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'standard'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'tidy'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'tokenizer'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'standard'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'xml'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'xmlreader'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'xmlrpc'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'xmlwriter'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'xsl'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'Zend OPcache'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'zip'
  - docker exec --tty ${container_id} env TERM=xterm php -m | grep 'zlib'

after_failure:
  - docker exec --tty ${container_id} env TERM=xterm php -v
  - docker exec --tty ${container_id} env TERM=xterm php -i | grep 'memory_limit.*'
  - docker exec --tty ${container_id} env TERM=xterm php -m
  - docker exec --tty ${container_id} env TERM=xterm apt-cache search php*

notifications:
  slack: ambimax:2MlPTX9bY9aPxCPhJGxHKIT6
  webhooks: https://galaxy.ansible.com/api/v1/notifications/